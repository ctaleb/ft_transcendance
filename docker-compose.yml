services:
  database:
    image: postgres:14-bullseye
    container_name: database
    networks:
      - 42network
    init: true
    # default port but probably not needed in our case, since already exposed for the docker network in the official image
    # while we work on our own environments, we'll need to keep this open however
    ports:
      - 5432:5432
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./db:/var/lib/postgresql/data/
  adminer:
    image: adminer
    container_name: adminer
    networks:
      - 42network
    init: true
    restart: unless-stopped
    # http://localhost:8080/ to access adminer page
    ports:
      - 8080:8080
  #back:
  #  depends_on:
  #    - database
  #  image: back
  #  container_name: back
  #  networks:
  #    - 42network
  #  init: true
  #  build: back/.
  #  restart: unless-stopped
  #front:
  #  depends_on:
  #    - back
  #  image: front
  #  container_name: front
  #  networks:
  #    - 42network
  #  init: true
  #  build: front/.
  #  restart: unless-stopped
  #  ports:
  #    - 4000:4000
# volumes:
#   db:
#     name: db
#     driver: local
networks:
  42network:
    name: 42network
    external: false
